from faker import Faker
import pyinputplus as pyip

fake_details_generator = Faker()


class FakeDetails:
    def __init__(self):
        self.fake_simple_profile = fake_details_generator.simple_profile()
        self.fake_profile = fake_details_generator.profile()

    def full_profile_generator(self):
        # use the Faker.profile() to generte a more detailed fake profile with more fake details
        print(
            f"""
              Fake Name: {self.fake_profile['name']}
              Fake Date of Birth : {self.fake_simple_profile['birthdate']}
              Gender : {self.fake_profile['sex']}
              Fake Email : {self.fake_profile['mail']}
              Fake Address : {self.fake_simple_profile['address']}
              Fake Job : {self.fake_profile['job']}
              Fake Company : {self.fake_profile['company']}
              Fake Blood Group : {self.fake_profile['blood_group']}
              Fake  Website : {self.fake_profile['website']}
              """
        )

    def less_details_profile_generator(self):
        # uses the Faker().simple_profile() to generate a profile with only basic details
        print(
            f"""Fake Name :{self.fake_simple_profile['name']}
                Fake Date of Birth: {self.fake_simple_profile['birthdate']}
                Gender : {self.fake_simple_profile['sex']}
                Fake Email:{self.fake_simple_profile['mail']}
                Fake Address:{self.fake_simple_profile['address']}
            """
        )

    # the below fucntion to be implemented later
    ''' 
    def database_creator(self):
        """
        This function creates a database with sqlite3.
        It create necessary tables for the database to allow input of the fake data,
        which is generated by faker library.
        """
        create_database = sqlite3.connect("fake_details_database.sqlite3")
        database_command_portal = (
            create_database.cursor()
        )  # acts as a portal to input commands to the database
        database_command_portal.execute("DROP TABLE IF EXISTS Fake_Details")
        database_command_portal.execute(
            """
                                            CREATE TABLE Fake_Details(details_id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL,
                                                                            fake_name TEXT,fake_date_of_birth TEXT,Gender TEXT,fake_email TEXT,
                                                                            fake_address TEXT,fake_job TEXT,fake_company TEXT,fake_blood_group TEXT,
                                                                             fake_website   varchar(125)
                                            
                                            
                                            )


                                         """
        )
        create_database.commit()
        create_database.close()
    '''


generator_object = FakeDetails()


def fake_profile_chooser():
    # validate user input by asking them to choose which profile to generate
    user_respose = pyip.inputMenu(
        ["Simple Fake Profile(few details)", "Complex Profile(more details)"],
        numbered=True,
        prompt="What type of profile would you like to generate : \n ",
    )

    if user_respose == "Simple Fake Profile(few details)":
        generator_object.less_details_profile_generator()
    if user_respose == "Complex Profile(more details)":
        generator_object.full_profile_generator()


# to be impelmented later
'''def fake_database_adder():
    """
    This function adds the fake details to a database
    """
    for i in range(20):
        fake_profile = fake_details_generator.profile()
        open_database = sqlite3.connect("fake_details_database.sqlite3")
        database_command_portal = open_database.cursor()
        database_command_portal.execute(
            """
                                                              INSERT INTO Fake_Details(fake_name,fake_date_of_birth,
                                                                                       Gender,fake_email,fake_address,fake_job,
                                                                                        fake_company,fake_blood_group,fake_website
                                                            ) VALUES(?,?,?,?,?,?,?,?,?)""",
            (
                fake_profile["name"],
                fake_profile["birthdate"],
                fake_profile["sex"],
                fake_profile["mail"],
                fake_profile["address"],
                fake_profile["job"],
                fake_profile["company"],
                fake_profile["blood_group"],
                fake_profile["website"][0]
            )
        )
        open_database.commit()
    open_database.close()
'''

if __name__ == "__main__":
    fake_profile_chooser()
